(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{263:function(t,s,a){"use strict";a.r(s);var e=a(0),i=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"modeling-with-distance-functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modeling-with-distance-functions"}},[t._v("#")]),t._v(" Modeling with Distance Functions")]),t._v(" "),a("p",[t._v("Distance functions (DFs) are a functional representation useful for defining shapes and solid volumes. Deriving the DF of an arbitrary surface in general is a complex problem. However by understanding some simple primitives and studying their properties we can develop an intuition for modeling with DFs. Constructive solid geometry (CSG), symmetry and non-linear transformations can be applied to create sophisticated models.")]),t._v(" "),a("p",[a("strong",[t._v("Definition:")]),t._v(" For a solid "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"S"}})],1)],1)],1)],1),t._v(" and a point "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mstyle",[a("mjx-mspace",{staticStyle:{width:"0.167em"}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"p"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"2209"}})],1),a("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"S"}})],1)],1)],1)],1),t._v(", the distance function maps "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"p"}})],1)],1)],1)],1),t._v(" to its minimum distance to "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"S"}})],1)],1)],1)],1),t._v("."),a("br"),t._v(" "),a("br"),t._v("\nTo understand what this means, consider a solid 2D circle. The distance "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1)],1)],1)],1),t._v(" from a point "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-TeXAtom",[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"p"}})],1)],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"="}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"("}})],1),a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"x"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:","}})],1),a("mjx-mi",{staticClass:"mjx-i",attrs:{space:"2"}},[a("mjx-c",{attrs:{c:"y"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1),t._v(" to a circle of radius "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"r"}})],1)],1)],1)],1),t._v(" centered at the origin is:\n"),a("br"),t._v(" "),a("center",[a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"Lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"="}})],1),a("mjx-msqrt",{attrs:{space:"4"}},[a("mjx-sqrt",[a("mjx-surd",[a("mjx-mo",{staticClass:"mjx-sop"},[a("mjx-c",{attrs:{c:"221A"}})],1)],1),a("mjx-box",{staticStyle:{"padding-top":"0.043em"}},[a("mjx-msup",[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"x"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"2"}})],1)],1)],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-msup",{attrs:{space:"3"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"y"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"2"}})],1)],1)],1)],1)],1)],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[a("mjx-c",{attrs:{c:"r"}})],1)],1)],1)],1)],1),t._v(" "),a("br"),t._v(" "),a("iframe",{staticStyle:{border:"1px solid #ccc"},attrs:{src:"https://www.desmos.com/calculator/o2mcl7poux?embed",width:"100%",height:"400px",frameborder:"0"}}),t._v(" "),a("center",[a("em",[t._v("The purple line shows that the distance from "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"p"}})],1)],1)],1)],1),t._v(" to the circle is the distance to the origin minus the radius "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"r"}})],1)],1)],1)],1)],1)]),t._v(" "),a("br"),t._v("\nTry dragging around the point in the interactive example above to convince yourself that no matter where "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"p"}})],1)],1)],1)],1),t._v(" is the equation holds true."),a("br"),t._v("\nYou may also notice that when "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"p"}})],1)],1)],1)],1),t._v(" is inside the circle the DF is the negative of the distance to the surface. This is a special case of a DF, called a signed distance function (SDF). SDFs have additional features, such as the ability to invert the solid by multiplying the SDF by -1.")],1),t._v(" "),a("p",[t._v("In 3D, the DF of a sphere is basically the same: "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mstyle",{attrs:{size:"lg"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"d"}})],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[a("mjx-c",{attrs:{c:"="}})],1),a("mjx-msqrt",{attrs:{space:"4"}},[a("mjx-sqrt",[a("mjx-surd",[a("mjx-mo",{staticClass:"mjx-sop"},[a("mjx-c",{attrs:{c:"221A"}})],1)],1),a("mjx-box",{staticStyle:{"padding-top":"0.043em"}},[a("mjx-msup",[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"x"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"2"}})],1)],1)],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-msup",{attrs:{space:"3"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"y"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"2"}})],1)],1)],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[a("mjx-c",{attrs:{c:"+"}})],1),a("mjx-msup",{attrs:{space:"3"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"z"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[a("mjx-c",{attrs:{c:"2"}})],1)],1)],1)],1)],1)],1),a("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[a("mjx-c",{attrs:{c:"r"}})],1)],1)],1)],1),t._v("."),a("br"),t._v("\nThis sphere can be rendered by expressing it in GLSL (See sections on GLSL and sphere tracing to learn more)."),a("br"),t._v("\nBecause GLSL has built vector types and functions, the DF of the sphere can be written simply as:")],1),t._v(" "),a("div",{staticClass:"language-glsl extra-class"},[a("pre",{pre:!0,attrs:{class:"language-glsl"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sphere")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("vec3")]),t._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),t._v(" r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This produces:"),a("br"),t._v(" "),a("iframe",{attrs:{width:"100%",height:"450px",src:"http://shader-park.appspot.com/sculpture/-LM-Nx6cvMmlbdKKiB64?example=true&embed=true&hideeditor=true",frameborder:"0",scrolling:"no"}})]),t._v(" "),a("h3",{attrs:{id:"coordinate-systems"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coordinate-systems"}},[t._v("#")]),t._v(" Coordinate Systems")]),t._v(" "),a("p",[t._v("Spherical")]),t._v(" "),a("h3",{attrs:{id:"preserving-operations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preserving-operations"}},[t._v("#")]),t._v(" Preserving operations")]),t._v(" "),a("p",[t._v("Translation\nRotation\nReflection\nRevolve from 2D")]),t._v(" "),a("h3",{attrs:{id:"non-preserving-operations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#non-preserving-operations"}},[t._v("#")]),t._v(" Non-Preserving operations")]),t._v(" "),a("p",[t._v("Any arbitrary distortion")]),t._v(" "),a("p",[t._v("magnitude of the grad of DF is 1. If it is different step step size must be scaled.")]),t._v(" "),a("h2",{attrs:{id:"the-sphere-tracing-algorithm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-sphere-tracing-algorithm"}},[t._v("#")]),t._v(" The Sphere-tracing algorithm")]),t._v(" "),a("h2",{attrs:{id:"color-vector-fields"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#color-vector-fields"}},[t._v("#")]),t._v(" Color Vector Fields")]),t._v(" "),a("h3",{attrs:{id:"lighting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lighting"}},[t._v("#")]),t._v(" Lighting")]),t._v(" "),a("p",[t._v("Gradient of DF is normal.")]),t._v(" "),a("h2",{attrs:{id:"roll-your-own-intersection-function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roll-your-own-intersection-function"}},[t._v("#")]),t._v(" Roll your own intersection function")]),t._v(" "),a("p",[t._v("The shade function can be hacked to render 2D shaders, or implement your own intersection algorithm or volumetric renderer.")]),t._v(" "),a("h2",{attrs:{id:"sources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sources"}},[t._v("#")]),t._v(" Sources")]),t._v(" "),a("p",[t._v("Much of the math and code in this page is based on\nIQ articles\nJamie wong")]),t._v(" "),a("h2",{attrs:{id:"glsl-opengl-shading-language"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#glsl-opengl-shading-language"}},[t._v("#")]),t._v(" GLSL (OpenGL Shading Language)")]),t._v(" "),a("p",[t._v("GLSL a small language (essentially C without pointers) with built-in functions and data types for working with vectors and common maths. It is designed to run very efficiently on a graphics processor, even from within a web page. Graphics processors are capable of performing calculations at an amazing speed. In just a few minutes of interactive modeling on this site, your program in distanceToSurface can easily be executed over 100 billion times.")]),t._v(" "),a("p",[t._v("Some built in types:\nvec2\nvec3\nvec4\nmat2\nmat3\nmat4")]),t._v(" "),a("p",[t._v("Some built in functions:\nfloat length(vec v)\nfloat distance(vec v1,vec v2)\nvec normalize(vec v)\npow\nexp\nsqrt\nabs\nTrig - sin, cos, tan, atan, acos, asin...")]),t._v(" "),a("p",[t._v("A full list of built-in functions can be found at: [url]")]),t._v(" "),a("h2",{attrs:{id:"further-reading-and-resources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#further-reading-and-resources"}},[t._v("#")]),t._v(" Further reading and resources")]),t._v(" "),a("p",[t._v("IQs articles\nshadertoy\nCurv")])])}),[],!1,null,null,null);s.default=i.exports}}]);